---
export interface Props {
  title: string;
  description?: string;
  image?: string;
  noIndex?: boolean;
}

const { title, description = "SIM-ONE Chat Interface - Revolutionary AI Framework", image, noIndex = false } = Astro.props;

const canonicalURL = Astro.site ? new URL(Astro.url.pathname, Astro.site) : Astro.url;
---

<!-- Import global styles including Tailwind CSS -->
<style is:global>
  @import "../styles/global.css";
</style>

<!doctype html>
<html lang="en" class="h-full">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    {image && <meta property="og:image" content={new URL(image, Astro.url)} />}
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    {image && <meta property="twitter:image" content={new URL(image, Astro.url)} />}
    
    <!-- SEO -->
    {noIndex && <meta name="robots" content="noindex" />}
    
    <!-- Preload critical fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet" />
    
    <!-- Import global styles -->
    <style>
      /* CSS Variables for theme system */
      :root {
        /* ChatGPT-inspired color palette */
        --color-bg-primary: #ffffff;
        --color-bg-secondary: #f7f7f8;
        --color-bg-tertiary: #ececf1;
        --color-bg-chat: #ffffff;
        --color-bg-sidebar: #f7f7f8;
        --color-bg-hover: #ececf1;
        --color-bg-active: #d1d5db;
        
        --color-text-primary: #374151;
        --color-text-secondary: #6b7280;
        --color-text-tertiary: #9ca3af;
        --color-text-inverse: #ffffff;
        
        --color-border-primary: #e5e7eb;
        --color-border-secondary: #d1d5db;
        --color-border-focus: #10a37f;
        
        --color-accent-primary: #10a37f;
        --color-accent-hover: #0d8f6f;
        --color-accent-light: #e6f7f3;
        
        --color-danger: #ef4444;
        --color-warning: #f59e0b;
        --color-success: #10b981;
        
        /* Typography scale */
        --font-family-primary: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        --font-size-xs: 0.75rem;
        --font-size-sm: 0.875rem;
        --font-size-base: 1rem;
        --font-size-lg: 1.125rem;
        --font-size-xl: 1.25rem;
        --font-size-2xl: 1.5rem;
        --font-size-3xl: 1.875rem;
        
        /* Spacing scale */
        --spacing-xs: 0.25rem;
        --spacing-sm: 0.5rem;
        --spacing-md: 1rem;
        --spacing-lg: 1.5rem;
        --spacing-xl: 2rem;
        --spacing-2xl: 3rem;
        
        /* Border radius */
        --radius-sm: 0.375rem;
        --radius-md: 0.5rem;
        --radius-lg: 0.75rem;
        --radius-xl: 1rem;
        
        /* Shadows */
        --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
        --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
        --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
        
        /* Transitions */
        --transition-fast: 150ms ease-in-out;
        --transition-normal: 250ms ease-in-out;
        --transition-slow: 350ms ease-in-out;
      }
      
      /* Dark theme variables */
      [data-theme="dark"] {
        --color-bg-primary: #1f2937;
        --color-bg-secondary: #111827;
        --color-bg-tertiary: #374151;
        --color-bg-chat: #1f2937;
        --color-bg-sidebar: #111827;
        --color-bg-hover: #374151;
        --color-bg-active: #4b5563;
        
        --color-text-primary: #f9fafb;
        --color-text-secondary: #d1d5db;
        --color-text-tertiary: #9ca3af;
        --color-text-inverse: #111827;
        
        --color-border-primary: #374151;
        --color-border-secondary: #4b5563;
        --color-border-focus: #10a37f;
      }
      
      /* Base styles */
      * {
        box-sizing: border-box;
      }
      
      html {
        font-family: var(--font-family-primary);
        height: 100%;
      }
      
      body {
        margin: 0;
        padding: 0;
        height: 100%;
        background-color: var(--color-bg-primary);
        color: var(--color-text-primary);
        font-size: var(--font-size-base);
        line-height: 1.5;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
      }
      
      #app {
        height: 100%;
        display: flex;
        flex-direction: column;
      }
    </style>
    
    <title>{title}</title>
  </head>
  <body class="h-full">
    <div id="app" class="h-full">
      <slot />
    </div>
    
    <!-- Global scripts -->
    <script>
      // Theme initialization
      const initTheme = () => {
        const savedTheme = localStorage.getItem('theme');
        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        const theme = savedTheme || (prefersDark ? 'dark' : 'light');
        
        document.documentElement.setAttribute('data-theme', theme);
      };
      
      // Initialize theme immediately to prevent flash
      initTheme();
      
      // Listen for theme changes
      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
        if (!localStorage.getItem('theme')) {
          document.documentElement.setAttribute('data-theme', e.matches ? 'dark' : 'light');
        }
      });
    </script>
  </body>
</html>

